[package]
name = "gloss-hecs"
description = "A fast, minimal, and ergonomic entity-component-system library"
license = "MIT OR Apache-2.0"
repository = "https://github.com/Ralith/hecs"
keywords = ["ecs", "entity"]
categories = ["data-structures", "game-engines", "no-std"]
authors.workspace = true
edition.workspace = true
publish = false
readme = "README.md"
rust-version.workspace = true
version.workspace = true

[lib]
# name = "gloss_renderer_lib"
# crate-type = ["cdylib", "rlib"]
crate-type = ["rlib"]

[features]
default = ["std"]
std = []
# Enables derive(Bundle)
macros = ["hecs-macros", "lazy_static"]
# Enables the serialize::column module
column-serialize = ["serde"]
# Enables the serialize::row module
row-serialize = ["serde"]
#enable non-abi safe typeid. Useful for wasm where we won't need to dynamically load libraries anyways so we don't care about the abi
unsafe_typeid = []

[dependencies]
hecs-macros = { path = "macros", version = "=0.5.0", optional = true }
hashbrown = { version = "0.13.1", default-features = false, features = ["ahash", "inline-more"] }
lazy_static = { version = "1.4.0", optional = true, features = ["spin_no_std"] }
serde = { version = "1.0.117", default-features = false, optional = true }
spin = { version = "0.9.2", default-features = false, features = ["mutex", "spin_mutex"] }
negative-impl = "0.1"
gloss-utils.workspace=true
identity-hash = "0.1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
abi_stable.workspace=true


[dev-dependencies]
bencher = "0.1.5"
rand = "0.8.3"
trybuild = "1.0.23"
serde = { version = "1.0.117", features = ["derive"] }
serde_test = "1.0.117"

[[bench]]
name = "bench"
harness = false
required-features = ["macros"]

[lints]
workspace = true
